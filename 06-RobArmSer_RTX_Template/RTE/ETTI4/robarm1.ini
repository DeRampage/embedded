/**
  ******************************************************************************
  * @file    robarm1.ini
  * @author  Prof. Dr.-Ing. Ferdinand Englberger
  * @version V2.0.0
  * @date    01.10.2011
  * @brief   Simulation des Roboterams (Servocontroller)
  * @details Es wird nicht simuliert, dass der Controller nicht antwortet
  ******************************************************************************
  *	@par History:
  *  @details V2.0.0 Ferdinand Englberger
  *           - Startversion LPC1769
  ******************************************************************************
  * @brief
  * <h2><center>&copy; COPYRIGHT 2011 UniBwM ETTI WE 4</center></h2>
  ******************************************************************************
  */
  
  
/**
  * @brief  Signal simuliert anxS20
  * @details Simulation für serielle Anbindung an UART1 (Adr = 97) 
  * @details UART1
  * @param  None
  * @retval None
  */  
SIGNAL void robarmsim(void)
{
   unsigned char temp;
   unsigned int pulsdauer;
   unsigned int speed;
   unsigned int kommando;
   printf("Start der Robarm-Simulation\n");
   for(;;)
   {
     wwatch(S1OUT); // 'a'
	 if(S1OUT != 'a')
	           continue;
	 wwatch(S1OUT); // 'x'
	 if(S1OUT != 'x')
	           continue;
	 wwatch(S1OUT); // 97
	 if(S1OUT != 97)
	 {
	    printf("ungültige IIC-Adresse\n");
	    continue;
	 }	   
	 wwatch(S1OUT); 
     temp = S1OUT;

     switch(temp)
	 {
	   case 128:  printf("Auslesen der Version\n");
	              S1IN=97;  //Quittung
				  swatch(1.4e-3);
	              S1IN=235;  // Versionsnummer
	              break;
	   case 2:	  wwatch(S1OUT);  // 2 Byte Kommando
				  kommando = S1OUT;
				  if((kommando >=22) && (kommando <=41)) // Setzen des Speeds
	              {
	                printf("neuer Speed Servo %3d: ", (int)(kommando-21));
	                wwatch(S1OUT);  //  Lese Speed
	                speed = S1OUT;
	                printf("%u us/20ms\n",speed);
	                S1IN=97;  //Quittung
				   }
				   else
				    printf("Kommando wird nicht unterstützt");
	              break;
	   case 3:    wwatch(S1OUT);  // 3 Byte Kommando
				  kommando = S1OUT;
	              if((kommando >=1) && (kommando <=20)) // Setzen der Pulslänge
	              {
	                printf("neue Pulsdauer Servo %3d: ", (int)kommando);
	                wwatch(S1OUT);  // Highteil der Pulsdauer 
	                pulsdauer = S1OUT <<8;
	                wwatch(S1OUT);  // Lowteil der Pulsdauer 
	                pulsdauer = pulsdauer | S1OUT;
	                printf("%u us\n",pulsdauer);
	                S1IN=97;  //Quittung
	               }
				   else
				     printf("Kommando wird nicht unterstützt");
				   break;
	 }
   }
}

robarmsim()

