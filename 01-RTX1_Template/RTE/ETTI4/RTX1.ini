/**
  ******************************************************************************
  * @file    RTX1.ini
  * @author  Prof. Dr.-Ing. Ferdinand Englberger
  * @version V2.0.0
  * @date    15.09.2011
  * @brief   Praktikumsversuch RTX1 - Simulatorfunktionen
  ******************************************************************************
  * @details Simulatorfunktionen für folgendende Aufgaben
  *          - Hex-Drehschalter	P0.11 - P0.8
  *          - DIP.Schalter     P0.7  - P0.0
  *          - SW1-Taster P2.11
  *          - SW2-Taster P2.12
  *          - UART3-Schnittstelle wird in das UART3-FEnster umgelenkt
  ******************************************************************************
  *	@par History:
  *  @details V2.0.0 Ferdinand Englberger
  *           - Startversion LPC1769
  ******************************************************************************
  * @brief
  * <h2><center>&copy; COPYRIGHT 2011 UniBwM ETTI WE 4</center></h2>
  ******************************************************************************
  */

/**
  * @brief Funktion simuliert die Einstellung des Hex-Drehschalters
  * @param  None
  * @retval None
  */
FUNC void setHex(void)
{
  unsigned int hexVal;
  
  hexVal = getint("Neuer HexDrehwert (0-15)");
  if(hexVal <= 15)
  {
     printf("Neuer Hex-Drehwert: %d\n", hexVal);
     PORT0 = PORT0 & ~(0xF<<8) | ((~hexval & 0xF)<<8);
  }
  else
    printf("ungültiger Wert\n");
}

/**
  * @brief Funktion simuliert die Einstellung des DIP-Schalters
  * @param  None
  * @retval None
  */
FUNC void setDIP(void)
{
  unsigned int dipVal;
  
  dipVal = getint("Neuer DIPwert (0-255)");
  if(dipVal <= 255)
  {
     printf("Neuer DIP-Wert: %d\n", dipVal);
     PORT0 = PORT0 & ~(0xFF<<0) | ((~dipval & 0xFF)<<0);
  }
  else
    printf("ungültiger Wert\n");
}


/**
  * @brief Signal-Funktion simuliert Taster SW1
  * @param  None
  * @retval None
  */
SIGNAL void pressSW1(void)
{
   printf("Press SW1\n");
   PORT2 = PORT2 | (1<<11);
   swatch(40.0e-3);
   PORT2 = PORT2 & ~(1<<11);
   printf("Release SW1\n");
}

/**
  * @brief Signal-Funktion simuliert Taster SW2
  * @param  None
  * @retval None
  */
SIGNAL void pressSW2(void)
{
   printf("Press SW2\n");
   PORT2 = PORT2 & ~(1<<12);  
   swatch(40.0e-3);
   PORT2 = PORT2 | (1<<12);
   printf("Release SW2\n");
}


PORT2 = PORT2 & ~(1<<11); /*!< SW1 Startwert */
PORT2 = PORT2 |  (1<<12); /*!< SW2 Startwert */

/** @brief UART mit UART #3 Window verbinden */
assign win3 < S3IN > S3OUT 

define button "Set DIP","setDIP()"
define button "Set Hex","setHex()"
define button "Press SW1","pressSW1()"
define button "Press SW2","pressSW2()"